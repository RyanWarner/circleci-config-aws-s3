# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
deploy_shared: &deploy_shared
  docker:
    - image: circleci/python:3.7.2-stretch
  working_directory: ~/repo
  steps:
    - attach_workspace:
        at: ~/repo
    - run:
        name: Install awscli
        command: sudo pip install awscli
    - run:
        name: Configure AWS
        command: aws configure set region $AWS_S3_REGION
    - run:
        name: Upload public folder to S3
        command: aws s3 sync --acl public-read --delete ./public s3://$S3_BUCKET --metadata-directive REPLACE --expires 2100-01-01T00:00:00Z --cache-control max-age=31536000
    - run:
        name: Update index.html cache headers
        command: aws s3 cp s3://$S3_BUCKET/index.html s3://$S3_BUCKET/index.html --metadata-directive REPLACE --cache-control max-age=0,no-cache,no-store,must-revalidate --content-type text/html --acl public-read

version: 2
jobs:
  build:
    docker:
      - image: circleci/node:12.16.3

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-

      - run: npm install
      - run:
          name: Build
          command: |
              if [ $CIRCLE_BRANCH = 'master' ]; then
                npm run build:production
              fi
              if [ $CIRCLE_BRANCH = 'staging' ]; then
                npm run build:staging
              fi

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - persist_to_workspace:
          root: /home/circleci/repo
          paths:
            - .

  deploy-staging:
    <<: *deploy_shared

  deploy-production:
    <<: *deploy_shared

workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - staging
                - master

      - deploy-staging:
          context: staging
          requires:
            - build
          filters:
            branches:
              only: staging
      - deploy-production:
          context: production
          requires:
            - build
          filters:
            branches:
              only: master
